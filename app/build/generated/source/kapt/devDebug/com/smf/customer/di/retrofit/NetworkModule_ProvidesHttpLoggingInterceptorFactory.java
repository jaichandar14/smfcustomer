// Generated by Dagger (https://dagger.dev).
package com.smf.customer.di.retrofit;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvidesHttpLoggingInterceptorFactory implements Factory<HttpLoggingInterceptor> {
  private final NetworkModule module;

  public NetworkModule_ProvidesHttpLoggingInterceptorFactory(NetworkModule module) {
    this.module = module;
  }

  @Override
  public HttpLoggingInterceptor get() {
    return providesHttpLoggingInterceptor(module);
  }

  public static NetworkModule_ProvidesHttpLoggingInterceptorFactory create(NetworkModule module) {
    return new NetworkModule_ProvidesHttpLoggingInterceptorFactory(module);
  }

  public static HttpLoggingInterceptor providesHttpLoggingInterceptor(NetworkModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.providesHttpLoggingInterceptor());
  }
}
