// Generated by Dagger (https://dagger.dev).
package com.smf.customer.app.base;

import com.smf.customer.di.sharedpreference.SharedPrefsHelper;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseActivity_MembersInjector<T extends BaseViewModel> implements MembersInjector<BaseActivity<T>> {
  private final Provider<SharedPrefsHelper> preferenceHelperProvider;

  public BaseActivity_MembersInjector(Provider<SharedPrefsHelper> preferenceHelperProvider) {
    this.preferenceHelperProvider = preferenceHelperProvider;
  }

  public static <T extends BaseViewModel> MembersInjector<BaseActivity<T>> create(
      Provider<SharedPrefsHelper> preferenceHelperProvider) {
    return new BaseActivity_MembersInjector<T>(preferenceHelperProvider);
  }

  @Override
  public void injectMembers(BaseActivity<T> instance) {
    injectPreferenceHelper(instance, preferenceHelperProvider.get());
  }

  @InjectedFieldSignature("com.smf.customer.app.base.BaseActivity.preferenceHelper")
  public static <T extends BaseViewModel> void injectPreferenceHelper(BaseActivity<T> instance,
      SharedPrefsHelper preferenceHelper) {
    instance.preferenceHelper = preferenceHelper;
  }
}
