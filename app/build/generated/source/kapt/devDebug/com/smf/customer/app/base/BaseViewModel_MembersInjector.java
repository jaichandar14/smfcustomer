// Generated by Dagger (https://dagger.dev).
package com.smf.customer.app.base;

import com.smf.customer.di.retrofit.RetrofitHelper;
import com.smf.customer.di.sharedpreference.SharedPrefsHelper;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseViewModel_MembersInjector implements MembersInjector<BaseViewModel> {
  private final Provider<RetrofitHelper> retrofitHelperProvider;

  private final Provider<SharedPrefsHelper> preferenceHelperProvider;

  public BaseViewModel_MembersInjector(Provider<RetrofitHelper> retrofitHelperProvider,
      Provider<SharedPrefsHelper> preferenceHelperProvider) {
    this.retrofitHelperProvider = retrofitHelperProvider;
    this.preferenceHelperProvider = preferenceHelperProvider;
  }

  public static MembersInjector<BaseViewModel> create(
      Provider<RetrofitHelper> retrofitHelperProvider,
      Provider<SharedPrefsHelper> preferenceHelperProvider) {
    return new BaseViewModel_MembersInjector(retrofitHelperProvider, preferenceHelperProvider);
  }

  @Override
  public void injectMembers(BaseViewModel instance) {
    injectRetrofitHelper(instance, retrofitHelperProvider.get());
    injectPreferenceHelper(instance, preferenceHelperProvider.get());
  }

  @InjectedFieldSignature("com.smf.customer.app.base.BaseViewModel.retrofitHelper")
  public static void injectRetrofitHelper(BaseViewModel instance, RetrofitHelper retrofitHelper) {
    instance.retrofitHelper = retrofitHelper;
  }

  @InjectedFieldSignature("com.smf.customer.app.base.BaseViewModel.preferenceHelper")
  public static void injectPreferenceHelper(BaseViewModel instance,
      SharedPrefsHelper preferenceHelper) {
    instance.preferenceHelper = preferenceHelper;
  }
}
